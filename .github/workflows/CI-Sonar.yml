name: SonarCloud
on:
  pull_request:
    branches:
      - dev
    types:
      - opened
      - synchronize
      - reopened

permissions:
  checks: write
  pull-requests: write
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name : Update gradlew access authorized
        run: chmod +x gradlew

#      - name : Clean gradle
#        run : ./gradlew clean
#
#      - name : Stop gradle
#        run : ./gradlew --stop

      #test를 위한 mysql설정
      - name: Start MySQL
        uses: samin/mysql-action@v1.3
        with:
          host port: 3303
          container port: 3303
          mysql database: 'test_db'
          mysql user: 'test'
          mysql password: 'test_pw'

      #테스트를 위한 redis 설정
      - name: Start Redis
        uses: supercharge/redis-github-action@1.5.0
        with:
          redis-port: 6376

      #테스트를 위한 test yml 설정
      - name: Make application-test.yml
        run: |
          cd ./src/test/resources
          touch ./application-test.yml
          echo "${{ secrets.PROPERTIES_TEST }}" > ./application-test.yml
        shell: bash

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonarqube --info